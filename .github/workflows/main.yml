name: CI

on: [pull_request]
  # push:
  #   branches:
  #     - main

jobs:
  industrial_ci:
    strategy:
      matrix:
        env:
          - {ROS_DISTRO: humble, ROS_REPO: testing, CCOV: true}
          - {ROS_DISTRO: humble, ROS_REPO: main}
    env:
      CXXFLAGS: >-
        -Wall -Wextra
      BASEDIR: ${{ github.workspace }}/.work
      TARGET_CMAKE_ARGS: >
        -DCMAKE_BUILD_TYPE=${{ matrix.env.CCOV && 'Debug' || 'Release'}}
        -DCMAKE_CXX_FLAGS="$CXXFLAGS${{ matrix.env.CCOV && ' --coverage -O2 -fno-omit-frame-pointer'}}"
      UPSTREAM_CMAKE_ARGS: "-DCMAKE_CXX_FLAGS=''"
      DOWNSTREAM_CMAKE_ARGS: -DCMAKE_CXX_FLAGS="-Wall -Wextra"
      CCACHE_DIR: "${{ github.workspace }}/.ccache"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v2
        with:
          path: ${{ env.CCACHE_DIR }}
          key: ccache-${{ matrix.ROS_DISTRO }}-${{ matrix.ROS_REPO }}-${{github.run_id}}
          restore-keys: |
            ccache-${{ matrix.ROS_DISTRO }}-${{ matrix.ROS_REPO }}-
      - id: ici
        uses: 'ros-industrial/industrial_ci@master'
        env: ${{matrix.env}}
      - name: Generate codecov report for ros2_kitti_core
        working-directory: ${{ env.BASEDIR }}/target_ws
        env: ${{matrix.env}}
        if: always() && matrix.env.CCOV && steps.ici.outputs.target_test_results == '0'
        run: |
          sudo apt-get -qq update
          sudo apt-get install -q -y lcov
          lcov --initial --no-external --capture --directory . --output-file base.info --include "*/ros2_kitti_core/include/ros2_kitti_core/*" --include "*/ros2_kitti_core/src/*" --exclude "*/build/*" --exclude "*/install/*" --exclude "*/test/*"
          lcov --no-external --capture --directory . --output-file test.info --include "*/ros2_kitti_core/*" --exclude "*/build/*" --exclude "*/install/*" --exclude "*/test/*"
          lcov --add-tracefile base.info --add-tracefile test.info --output-file coverage.info
          lcov --list coverage.info
      - name: Upload codecov report for ros2_kitti_core
        uses: codecov/codecov-action@v3
        with:
          files: ${{ env.BASEDIR }}/target_ws/coverage.info
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
